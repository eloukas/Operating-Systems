#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-
Ονοματεπώνυμο					ΑΕΜ		E-mail

Σωτήριος-Παναγιώτης Χύτας		2012	schytas@uth.gr
Κλάιντι Μποντούρρι 				2020	kbontourri@uth.gr
Ελευθέριος-Παναγιώτης Λούκας 	2029	eloukas@uth.gr

#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-#-

Όσον αφορά το Goodness:
	Παρατηρούμε πάρα πολύ υψηλές τιμές στο goodness μιας διεργασίας, όταν αυτή
	μπαίνει για πρώτη φορά στο Run Queue.
	Αυτό γίνεται για τον εξής λόγο:
	Το πρώτο κλάσμα της goodness ισούται με ~1 
	Στο δεύτερο κλάσμα τώρα, ο αριθμητής ισούται με έναν πολύ μεγάλο αριθμό
	ενώ ο παρονομαστής είναι 1.Αυτό γίνεται διότι η διεργασία *μόλις* μπήκε στο Queue,
	συνεπώς WaitingInRQ(k) = 0.
	
Όσον αφορά goodness έναντι expected burst:



Όσον αφορά τα configs:
	



## Comments ##
Με βαση το expected_burst
1) Λιμοκτονία σε περιπτωση που σε καθε κυκλο ερχεται και νεα διεργασια!

2) Εξαρτάται σε ποιόν κύκλο μηχανής θα έρθει η κάθε διεργασία. Παράδειγμα αν έρθει
η 1η στα 10ms και η 2η στα 30ms τότε οι εναλλαγές θα γίνονται ανά 2 (30ms-10ms=20ms
με 10ms κβάντο 20ms/10ms=2) 

3) Λειτουργεί σαν RR σε περίπτωση που σκάσουν πολλές non-interactive ταυτόχρονα!

4) Σε περίπτωση pre-emptive πάντα θα τρέχει αυτή που μόλις ήρθε!

Με βαση το goodness
1) Σε non-interactive διεργασιες δουλευει σαν RR λόγο δεν πρόκειτε να πάρει την 
cpu η ιδια διεργάσια που έτρεχε στον προηγούμενο κβάντο (έχει τεραστιο goodness
λόγο του δικου της waiting_in_rq =0)

2) Δεν υπάρχει περίπτωση λιμοκτονίας λόγο ότι το waiting_in_rq σε αυτήν που
"λιμοκτονεί" θα αυξηθεί οπότε το goodness θα μεγαλωσει

3) Goodness λειτουργεί "δίκαια" σε περίπτωση που γίνονται πόλλα interrupts λόγο οτι
πάντα επιλέγει διεργασία βάση πόσο χρόνο θα τρέξει μια διεργασία και πόσο αδικημένη
είναι λόγο waiting_in_rq

Οπότε στο report:

1) Πλεονεκτηματα/Μειονεκτηματα απο expected_burst,goodness
2) Corner cases συμπεριφορα
3) Επισης να παίξουμε λίγο με το κβάντο και πως αλληλεπιδρά!
4) Διαλεξη scheduling σελ 25 το Σχημα, πρακτικα ειναι το goodness (να βγαλουμε
ενα παρομοιο)
5) Να φτιαξουμε τα prints, ωστε να βγαζουμε χρονο ολοκληρωσης κλπ κλπ
